static_resources:
  listeners:
  # ingress
  - name: mainapp_sidecar_listener
    address:
      socket_address:
        # Entrypoint for service through Envoy
        address: 0.0.0.0
        port_value: 8080
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          # used when emitting stats
          stat_prefix: mainapp_sidecar_hcm_filter
          http_filters:
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router 
          route_config:
            name: mainapp_sidecar_http_route_config
            virtual_hosts:
            # name used when emitting stats, not imp for routing itself
            - name: mainapp_sidecar_virtual_host
              domains: 
              - "*"
              routes:
              - name:
                match:
                  prefix: "/"
                route:
                  cluster: mainapp_service

          http_filters:
          - name: envoy.filters.http.lua
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
              ### This one will be called on every single call
              inline_code: |
                function envoy_on_request(rh)
                  rh:headers():add("x-target-name", "@@TARGET_NAME@@")
                end

                function envoy_on_response(rh)
                  --
                end
          - name: envoy.filters.http.jwt_authn
            typed_config: 
              "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
              providers:
                apigee:
                  issuer: https://api.endpoints.apigee-product-demo.cloud.goog//remote-token/token
                  audiences:
                  - remote-service-client
                  remote_jwks:
                    http_uri:
                      uri: https://api.endpoints.apigee-product-demo.cloud.goog/remote-token/certs
                      cluster: apigee-auth-service
                      timeout: 5s
                    cache_duration:
                      seconds: 300
                  payload_in_metadata: https://api.endpoints.apigee-product-demo.cloud.goog//remote-token/token
              rules:
              - match:
                  prefix: /
                requires:
                  requires_any:
                    requirements:
                    - provider_name: apigee
                    - allow_missing: {}

          # evaluate Apigee rules
          - name: envoy.filters.http.ext_authz
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
              transport_api_version: V3
              grpc_service:
                envoy_grpc:
                  cluster_name: apigee-remote-service-envoy
                timeout: 1s
              metadata_context_namespaces:
              - envoy.filters.http.jwt_authn

          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

          access_log: 
          # collect Apigee analytics
          - name: envoy.access_loggers.http_grpc
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.grpc.v3.HttpGrpcAccessLogConfig
              common_config:
                transport_api_version: V3
                grpc_service:
                  envoy_grpc:
                    cluster_name: apigee-remote-service-envoy
                log_name: apigee-remote-service-envoy
  clusters:
  - name: mainapp_service
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: mainapp_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                # reroute to service container in the same K8s deployment
                address: "@@BACKEND@@"
                port_value: 8000

  # define cluster for Apigee remote service
  - name: apigee-remote-service-envoy
    type: LOGICAL_DNS
    http2_protocol_options: {}
    load_assignment:
      cluster_name: apigee-remote-service-envoy
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: "@@ENVOY_ADAPTER_ADDRESS@@"
                port_value: @@ENVOY_ADAPTER_PORT@@
    common_lb_config:
      healthy_panic_threshold:
        value: 50.0
    health_checks:
      - timeout: 1s
        interval: 5s
        interval_jitter: 1s
        no_traffic_interval: 5s
        unhealthy_threshold: 1
        healthy_threshold: 3
        grpc_health_check: {}
    connect_timeout: 0.25s

  # define cluster for Apigee JWKS certs
  - name: apigee-auth-service
    connect_timeout: 2s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: apigee-auth-service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: "api.endpoints.apigee-product-demo.cloud.goog"
                port_value: "443"
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: "api.endpoints.apigee-product-demo.cloud.goog"
